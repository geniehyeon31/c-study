C++ 언어본색 제 4장 

포인터? 기억 장소의 주소, 포인터 변수? 그 주소를 기억하는 변수
앞서 배웠던 일반 변수는 자료를 저장, 포인터는 자료를 저장하는 변수의 주소를 기억.
쓰임새 -> 일반변수: 자료 자체를 저장하기 위해 사용, 포인터 변수: 일반 변수가 실제 매모리에 할당된 주소를 참조하기 위해 사용

4.1.1 변수
변수는 데이터를 저장하는 기억 장소
변수 사용에서의 기본 규칙
 *변수를 사용하기 전에 미리 선언해야 한다.
 *변수 선언에서 프로그래머로서의 예의 있는 코딩은 변수 초기화이다.

디버깅 모드 단축키 (F5)디버깅 시작 (Shift+F5)디버깅 중지 (F9)현재 커서 위치에 중단점을 설정하거나 해제 
(F10)프로시저 단위로 디버깅 실행 (F11)한 단계씩 코드로 디버깅을 실행

4.1.2 포인터 변수
일반 변수 = 값;
포인터 변수 = 주소;
자료형*포인터 변수 이름;

*pa의 값을 처리하기
(1) pa에 접근 -> pa에 저장된 a의 주소를 확인
(2) 간접지정 연산자를 실행 -> a의 주소로 접근하여 a에 저장된 값을 참조

일반변수 -> 값    예) cout << a; // 변수 a에 저장된 값 출력
&일반 변수 -> 주소    예) cout << &a; // 변수 a의 주솟값 출력
포인터 변수 -> 주소    예) cout << pa; // pa는 포인터 변수이므로 주소를 저장, 따라서 주소 출력됨
*포인터 변수 -> 값    예) cout << *pa; // pa에 저장된 주솟값에 다시 한 번 더 접근하여 지정된 값을 출력함

4.2 배열
변수는 하나의 기억 공간, 배열은 연속적인 기억 공간을 나타냄. 
5개의 기억 공간을 변수로 사용하려면 5개의 변수 이름을 지정해야 함. 
배열을 사용하면 하나의 이름으로 5개의 기억공간을 사용할 수 있음. 배열은 주로 반복문과 함께 사용됨.

변수와 배열의 공통점? 둘 다 기억 공간을 확보한다는 것.
변수와 배열의 차이점? 변수는 하나의 자료형에 대한 하나의 기억공간이고, 배열은 하나의 자료형에 대한 여러 개의 연속적인 기억 공간.

배열을 선언할 때는 하나의 이름에 몇 개의 기억 공간이 필요한 지 그 개수를 적어야 함. 

int score[3];

먼저 자료형을 명시하고 이어서 변수 이름과 마찬가지로 배열의 이름을 지정한 후 필요한 개수를 대괄호([])로 나타낸다.
앞서 선언된 배열의 예는 score라는 이름으로 정수형 기억 장소 3개를 확보하는 것.
score[0], score[1], score[2]

배열은 일반 변수와 마찬가지로 선언과 동시에 초기화가 가능. 배열의 각 요소의 값을 중괄호 ({})안에 콤마(,)로 구분해서 나타냄.
정수형 배열 score에 80, 90, 88을 각 기억 장소에 선언과 동시에 초기화하면 다음과 같다.

int score[3] = {80, 90, 88};

선언과 동시에 초기화하면 각 기억 장소에 값이 설정됨.

-배열 선언
배열 선언은 자료형과 사용할 크기를 함께 표기. 배열의 이름은 주소를, 배열 변수요소에 주소 지정 연산자(&)를 표기하면 주소를, 배열 변수 요소를 그대로 사용하면 값을 나타낸다. 

자로횽 배열 이름[사용할 크기];
cout << "배열의 시작 주소: " << 배열 이름 << endl;
cout << "배열의 시작 주소: " << &배열 이름[0] <<endl;
cout << "배열의 첫 번째 요소값: " << 배열 이름[0] << endl;

-배열 선언 및 초기화 
선언과 동시에 초기화할 수 있다.
자료형 배열 이름[사용할 크기]={초깃값1, 초깃값2, ...};
자료형 배열 이름[사용할 크기]={초깃값1, }; //0번째 요소는 초깃값 1로 지정되고 나머지는 0으로 초기화됨

4.3 문자열
문자열은 문자의 모음이다. 문자열은 연이어 있는 문자들의 모음으로, 연이어 있기 때문에 문자 배열이다.

4.3.1 문자열 다루기 : 문자 배열
문자 변수의 자료형은 char이고, 문자 상수는 작은따옴표(' ')로 표기하며, 기억 장소 1바이트를 차지한다. 
이해 비해 문자열은 문자의 모음이다.
문자열은 문자 상수의 모음으로 표기할 때 큰 따옴표(" ")로 표기한다.

char flag='y';
char string[30] = "computer";